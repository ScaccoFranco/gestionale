# Generated by Django 5.2.7 on 2025-10-09 09:15

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contoterzista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254)),
            ],
            options={
                'verbose_name': 'Contoterzista',
                'verbose_name_plural': 'Contoterzisti',
            },
        ),
        migrations.CreateModel(
            name='PrincipioAttivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, unique=True)),
                ('descrizione', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Principio Attivo',
                'verbose_name_plural': 'Principi Attivi',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('editor', 'Editor'), ('viewer', 'Viewer')], default='viewer', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('is_active_custom', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('can_manage_users', models.BooleanField(default=False)),
                ('can_export_data', models.BooleanField(default=False)),
                ('can_manage_clients', models.BooleanField(default=True)),
                ('can_manage_treatments', models.BooleanField(default=True)),
                ('can_view_reports', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Profilo Utente',
                'verbose_name_plural': 'Profili Utente',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Sessione Utente',
                'verbose_name_plural': 'Sessioni Utente',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('cliente_created', 'Cliente Creato'), ('cascina_created', 'Cascina Creata'), ('terreno_created', 'Terreno Creato'), ('prodotto_created', 'Prodotto Creato'), ('contoterzista_created', 'Contoterzista Creato'), ('contatto_created', 'Contatto Email Creato'), ('trattamento_created', 'Trattamento Creato'), ('trattamento_updated', 'Trattamento Aggiornato'), ('comunicazione_sent', 'Comunicazione Inviata'), ('user_login', 'Accesso Utente'), ('data_export', 'Esportazione Dati'), ('backup_created', 'Backup Creato')], help_text='Tipo di attività eseguita', max_length=50)),
                ('title', models.CharField(help_text="Titolo breve dell'attività", max_length=200)),
                ('description', models.TextField(blank=True, help_text="Descrizione dettagliata dell'attività")),
                ('related_object_type', models.CharField(blank=True, help_text='Tipo di oggetto coinvolto (Cliente, Terreno, etc.)', max_length=50)),
                ('related_object_id', models.PositiveIntegerField(blank=True, help_text="ID dell'oggetto coinvolto", null=True)),
                ('related_object_name', models.CharField(blank=True, help_text="Nome dell'oggetto coinvolto", max_length=200)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('extra_data', models.JSONField(blank=True, default=dict, help_text="Dati aggiuntivi dell'attività in formato JSON")),
            ],
            options={
                'verbose_name': 'Log Attività',
                'verbose_name_plural': 'Log Attività',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['-timestamp'], name='domenico_ac_timesta_924c7e_idx'), models.Index(fields=['activity_type'], name='domenico_ac_activit_4b29fb_idx'), models.Index(fields=['related_object_type', 'related_object_id'], name='domenico_ac_related_82dc54_idx')],
            },
        ),
        migrations.CreateModel(
            name='ContattoEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome del contatto', max_length=200)),
                ('email', models.EmailField(help_text='Indirizzo email del contatto', max_length=254)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contatti_email', to='domenico.cliente')),
            ],
            options={
                'verbose_name': 'Contatto Email',
                'verbose_name_plural': 'Contatti Email',
            },
        ),
        migrations.CreateModel(
            name='Cascina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cascine', to='domenico.cliente')),
                ('contoterzista', models.ForeignKey(blank=True, help_text='Contoterzista responsabile per questa cascina (opzionale)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cascine', to='domenico.contoterzista')),
            ],
        ),
        migrations.CreateModel(
            name='Prodotto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('descrizione', models.TextField(blank=True)),
                ('unita_misura', models.CharField(default='L', help_text='Es: L, Kg, g, ml', max_length=20)),
                ('principi_attivi', models.ManyToManyField(related_name='prodotti', to='domenico.principioattivo')),
            ],
            options={
                'verbose_name': 'Prodotto',
                'verbose_name_plural': 'Prodotti',
            },
        ),
        migrations.CreateModel(
            name='Terreno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('superficie', models.DecimalField(decimal_places=2, help_text='Superficie in ettari', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('cascina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terreni', to='domenico.cascina')),
            ],
            options={
                'verbose_name': 'Terreno',
                'verbose_name_plural': 'Terreni',
            },
        ),
        migrations.CreateModel(
            name='Trattamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('livello_applicazione', models.CharField(choices=[('cliente', 'Intera Azienda'), ('cascina', 'Cascina'), ('terreno', 'Terreni Selezionati')], default='cliente', help_text='Specifica il livello di applicazione del trattamento', max_length=20)),
                ('data_inserimento', models.DateTimeField(auto_now_add=True)),
                ('data_comunicazione', models.DateTimeField(blank=True, null=True)),
                ('data_esecuzione', models.DateField(blank=True, null=True)),
                ('stato', models.CharField(choices=[('programmato', 'Programmato'), ('comunicato', 'Comunicato'), ('completato', 'Completato'), ('annullato', 'Annullato')], default='programmato', help_text='Stato attuale del trattamento', max_length=20)),
                ('cascina', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trattamenti', to='domenico.cascina')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trattamenti', to='domenico.cliente')),
                ('terreni', models.ManyToManyField(blank=True, related_name='trattamenti', to='domenico.terreno')),
            ],
            options={
                'verbose_name': 'Trattamento',
                'verbose_name_plural': 'Trattamenti',
                'ordering': ['-data_inserimento'],
            },
        ),
        migrations.CreateModel(
            name='ComunicazioneTrattamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_invio', models.DateTimeField(auto_now_add=True)),
                ('destinatari', models.TextField(help_text='Lista email destinatari (separati da virgola)')),
                ('oggetto', models.CharField(max_length=500)),
                ('corpo_email', models.TextField()),
                ('allegati', models.TextField(blank=True, help_text='Lista percorsi allegati (separati da virgola)')),
                ('inviato_con_successo', models.BooleanField(default=False)),
                ('errore', models.TextField(blank=True)),
                ('trattamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comunicazioni', to='domenico.trattamento')),
            ],
            options={
                'verbose_name': 'Comunicazione Trattamento',
                'verbose_name_plural': 'Comunicazioni Trattamenti',
                'ordering': ['-data_invio'],
            },
        ),
        migrations.CreateModel(
            name='TrattamentoProdotto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantita_per_ettaro', models.DecimalField(decimal_places=3, help_text='Quantità per ettaro', max_digits=10, validators=[django.core.validators.MinValueValidator(0.001)])),
                ('prodotto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domenico.prodotto')),
                ('trattamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domenico.trattamento')),
            ],
            options={
                'verbose_name': 'Prodotto del Trattamento',
                'verbose_name_plural': 'Prodotti del Trattamento',
            },
        ),
    ]
